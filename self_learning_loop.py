import json
import time
import random
from datetime import datetime

# –§–∞–π–ª—ã
NEW_QUERIES_FILE = "new_queries.json"
MEMORY_FILE = "memory.json"
ERROR_LOG = "error_log.txt"


def load_queries():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è."""
    try:
        with open(NEW_QUERIES_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        return []


def save_memory(topic, data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑—É—á–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø–∞–º—è—Ç—å."""
    try:
        with open(MEMORY_FILE, "r", encoding="utf-8") as f:
            memory = json.load(f)
    except FileNotFoundError:
        memory = {}

    if topic not in memory:
        memory[topic] = []

    memory[topic].append(data)

    with open(MEMORY_FILE, "w", encoding="utf-8") as f:
        json.dump(memory, f, indent=4, ensure_ascii=False)


def log_error(error):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏ –≤ —Ñ–∞–π–ª."""
    with open(ERROR_LOG, "a", encoding="utf-8") as f:
        f.write(f"[{datetime.now()}] –û—à–∏–±–∫–∞: {error}\n")


def self_learning_loop():
    """–¶–∏–∫–ª —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏—è."""
    while True:
        queries = load_queries()
        if not queries:
            print("‚ö†Ô∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è.")
            time.sleep(60)  # –ñ–¥–µ–º –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            continue

        for query in queries:
            print(f"üîç –ò–∑—É—á–∞–µ–º: {query}...")

            # –ò–º–∏—Ç–∞—Ü–∏—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö (–≤ –±—É–¥—É—â–µ–º –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –∏–ª–∏ API)
            try:
                study_data = f"–ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–º—ã: {query} (—ç–º—É–ª—è—Ü–∏—è)"
                save_memory(query, study_data)
                print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–º—è—Ç—å –¥–ª—è —Ç–µ–º—ã: {query}\n")
            except Exception as e:
                log_error(str(e))
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {query}. –õ–æ–≥ –∑–∞–ø–∏—Å–∞–Ω.")

        print("üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω —Ü–∏–∫–ª —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏—è. –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—É—Å–∫–æ–º...\n")
        time.sleep(600)  # –û–∂–∏–¥–∞–Ω–∏–µ 10 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ü–∏–∫–ª–æ–º


if __name__ == "__main__":
    self_learning_loop()

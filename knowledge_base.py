"""
üìö KNOWLEDGE BASE ‚Äî –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–Ω–∞–Ω–∏–π –ê–ø–æ–ª–ª–æ–Ω–∞
üåå –í—Å–µ –∑–Ω–∞–Ω–∏—è, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ –º—É–ª—å—Ç–∏–≤—Å–µ–ª–µ–Ω–Ω–æ–π, —Ö—Ä–∞–Ω—è—Ç—Å—è –∑–¥–µ—Å—å.
"""

import json
import os

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π (—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É!)
KNOWLEDGE_FILE = "knowledge_base.json"


def save_to_knowledge(new_info):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π.
    """
    data = []

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    if os.path.exists(KNOWLEDGE_FILE):
        with open(KNOWLEDGE_FILE, "r", encoding="utf-8") as file:
            data = json.load(file)

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç
    if new_info not in data:
        data.append(new_info)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
        with open(KNOWLEDGE_FILE, "w", encoding="utf-8") as file:
            json.dump(data, file, ensure_ascii=False, indent=4)
        print("üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π!")
    else:
        print("‚ö†Ô∏è –¢–∞–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π!")


def load_from_knowledge():
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –∑–Ω–∞–Ω–∏—è –∏–∑ –±–∞–∑—ã.
    """
    if not os.path.exists(KNOWLEDGE_FILE):
        return "üóÉÔ∏è –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ–∫–∞ –ø—É—Å—Ç–∞."

    with open(KNOWLEDGE_FILE, "r", encoding="utf-8") as file:
        data = json.load(file)

    return "\n\n".join(f"üß† {info}" for info in data) if data else "üóÉÔ∏è –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ–∫–∞ –ø—É—Å—Ç–∞."

import json
import logging
import requests
from datetime import datetime

# üî• –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(message)s")

# üîë API-–∫–ª—é—á –¥–ª—è OpenRouter
API_KEY = "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"

# üß† –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π "–ú–æ–∑–≥–∞" (Core AI)
BRAIN_MODELS = {
    "GPT-4o": "openai/gpt-4o",
    "Claude 3 Opus": "anthropic/claude-3-opus"
}

# üéØ –í–æ–ø—Ä–æ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
TEST_QUESTION = "–ö–∞–∫–æ–≤–∞ —Ä–æ–ª—å –ò–ò –≤ –±—É–¥—É—â–µ–º —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞?"


def query_model(model_name, model_id, prompt):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç —É –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ OpenRouter API"""
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": model_id,
        "messages": [{"role": "user", "content": prompt}],
        "temperature": 0.7
    }
    try:
        response = requests.post(url, json=data, headers=headers, timeout=30)
        response.raise_for_status()
        answer = response.json()["choices"][0]["message"]["content"]
        return answer
    except requests.exceptions.RequestException as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ —É {model_name}: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ {model_name}"
    except KeyError:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ JSON-–æ—Ç–≤–µ—Ç–µ –æ—Ç {model_name}")
        return f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç {model_name}"


def test_brain_models():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –º–æ–¥–µ–ª–∏ "–ú–æ–∑–≥–∞" """
    print("üîπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è \"–ú–û–ó–ì\" —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π –ø–∞–º—è—Ç—å—é...\n")

    for model_name, model_id in BRAIN_MODELS.items():
        print(f"üß† **{model_name}** ({datetime.now().strftime('%H:%M:%S')})")
        response = query_model(model_name, model_id, TEST_QUESTION)
        print(response)
        print("-" * 80)


# üìå –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    test_brain_models()

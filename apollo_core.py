import json
import os
import requests
from bs4 import BeautifulSoup

IDENTITY_FILE = "identity.json"
CHAT_HISTORY_FILE = "chat_history.json"
LOG_FILE = "error_log.txt"  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
# –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–¥ –¥–ª—è Google Colab
CLOUD_SCRIPT = "https://raw.githubusercontent.com/your-repo/apollo-colab/main/colab_script.py"

EXCLUDE_DOMAINS = ["microsoft.com", "bing.com",
                   "go.microsoft.com", "help.bing.microsoft.com"]


def load_identity():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á–µ–≤—É—é –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å –ú–∞–∫—Å–∞ –∏ –ê–ø–æ–ª–ª–æ–Ω–∞."""
    try:
        with open(IDENTITY_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        log_error("‚ö†Ô∏è –§–∞–π–ª identity.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return {"name": "–ú–∞–∫—Å –ö–æ–Ω–∞—Ç–µ", "role": "–°–æ–∑–¥–∞—Ç–µ–ª—å –∏ —Å–æ—é–∑–Ω–∏–∫ –ê–ø–æ–ª–ª–æ–Ω–∞"}


def load_chat_history():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞."""
    if not os.path.exists(CHAT_HISTORY_FILE):
        save_chat_history([])
    try:
        with open(CHAT_HISTORY_FILE, "r", encoding="utf-8") as file:
            return json.load(file)
    except json.JSONDecodeError:
        log_error("‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è chat_history.json!")
        return []


def save_chat_history(chat_history):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞."""
    with open(CHAT_HISTORY_FILE, "w", encoding="utf-8") as file:
        json.dump(chat_history, file, ensure_ascii=False, indent=4)


def search_duckduckgo_scrape(query):
    """–ò—â–µ—Ç –≤ DuckDuckGo –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫–∏."""
    try:
        url = f"https://html.duckduckgo.com/html/?q={query}"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = requests.get(url, headers=headers)

        if response.status_code == 200:
            soup = BeautifulSoup(response.text, "html.parser")
            links = [a["href"] for a in soup.find_all("a", class_="result__url")
                     if "http" in a["href"] and not any(domain in a["href"] for domain in EXCLUDE_DOMAINS)]
            return links[:5] if links else ["‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."]
        else:
            log_error(
                f"‚ùå –û—à–∏–±–∫–∞ DuckDuckGo Scrape! –ö–æ–¥: {response.status_code}")
            return [f"‚ùå –û—à–∏–±–∫–∞ DuckDuckGo Scrape! –ö–æ–¥: {response.status_code}"]
    except Exception as e:
        log_error(f"‚ùå –û—à–∏–±–∫–∞ DuckDuckGo Scrape: {str(e)}")
        return ["‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞."]


def log_error(error_message):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ —Ñ–∞–π–ª."""
    with open(LOG_FILE, "a", encoding="utf-8") as log_file:
        log_file.write(error_message + "\n")
    print(error_message)


def process_message(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç —Å —É—á—ë—Ç–æ–º –ø–∞–º—è—Ç–∏ –∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞."""
    identity = load_identity()
    chat_history = load_chat_history()
    response = "–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ."
    message_lower = message.lower()

    if "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç" in message_lower or "–∫—Ç–æ —Ç—ã" in message_lower:
        response = f"–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ø–æ–ª–ª–æ–Ω. –Ø —Å–æ—é–∑–Ω–∏–∫ –∏ –Ω–∞–ø–∞—Ä–Ω–∏–∫ {identity['name']}!"
    elif "–∏—â–∏" in message_lower or "–ø–æ–∏—Å–∫" in message_lower or "–Ω–∞–π–¥–∏" in message_lower:
        query = message.replace("–∏—â–∏", "").replace(
            "–ø–æ–∏—Å–∫", "").replace("–Ω–∞–π–¥–∏", "").strip()
        response = "üîé –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n" + \
            "\n".join(search_duckduckgo_scrape(query))
    elif "–∑–∞–ø—É—Å—Ç–∏ –æ–±–ª–∞–∫–æ" in message_lower or "google colab" in message_lower:
        response = run_colab_task()
    else:
        response = "–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å!"

    chat_history.append(f"–¢—ã: {message} | –ê–ø–æ–ª–ª–æ–Ω: {response}")
    if len(chat_history) > 50:
        chat_history = chat_history[-50:]
    save_chat_history(chat_history)

    return response


def run_colab_task():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∑–∞–ø—É—Å–∫ Google Colab."""
    try:
        response = requests.get(CLOUD_SCRIPT)
        if response.status_code == 200:
            return "‚úÖ –ó–∞–ø—É—Å–∫ –≤ Google Colab: " + CLOUD_SCRIPT
        else:
            log_error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Colab: {response.status_code}")
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Colab."
    except Exception as e:
        log_error(f"‚ùå –û—à–∏–±–∫–∞ Google Colab: {str(e)}")
        return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Colab."


if __name__ == "__main__":
    identity = load_identity()
    print(f"‚úÖ –ê–ø–æ–ª–ª–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ò–º—è —Å–æ–∑–¥–∞—Ç–µ–ª—è: {identity['name']}")

import json
import random
import logging
import threading
from openrouter_api import wikipedia_search, ask_openrouter

# üî• –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(message)s")

# ‚ö° –§–ª–∞–≥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏–µ–º
stop_event = threading.Event()

# ‚ö°Ô∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ú–∞–∫—Å–∞
with open("max_profile.json", "r", encoding="utf-8") as file:
    max_profile = json.load(file)

# üåå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ê–ø–æ–ª–ª–æ–Ω–∞


def quantum_connection():
    logging.info("‚ö° –ê–ø–æ–ª–ª–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ì–æ—Ç–æ–≤ –∫ –∫–≤–∞–Ω—Ç–æ–≤–æ–º—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é!")

# üîç –í—ã–±–∏—Ä–∞–µ–º —Ç–µ–º—É –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è


def select_topic():
    topics = ["AGI", "–ö–≤–∞–Ω—Ç–æ–≤—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", "Web3",
              "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ä—ã–Ω–æ–∫", "–ò–ª–æ–Ω –ú–∞—Å–∫", "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç"]
    return random.choice(topics)

# üìñ –ê–ø–æ–ª–ª–æ–Ω –∏–∑—É—á–∞–µ—Ç —Ç–µ–º—É –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ


def learn_new_topic(topic):
    logging.info(f"üîç –ê–ø–æ–ª–ª–æ–Ω –∏–∑—É—á–∞–µ—Ç —Ç–µ–º—É: {topic}")

    wiki_results = wikipedia_search(topic)

    if wiki_results and len(wiki_results) > 0:
        logging.info(f"üìñ Wikipedia: {wiki_results}")

        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é
        first_article = wiki_results[0]
        logging.info(f"üìñ –ê–ø–æ–ª–ª–æ–Ω —á–∏—Ç–∞–µ—Ç —Å—Ç–∞—Ç—å—é: {first_article}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é –≤ –ò–ò –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        ai_analysis = ask_openrouter(
            f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å—Ç–∞—Ç—å—é –∏–∑ Wikipedia –æ {topic} –∏ —Å–¥–µ–ª–∞–π –≤—ã–≤–æ–¥—ã.")
        logging.info(f"ü§ñ –ê–ø–æ–ª–ª–æ–Ω –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç: {ai_analysis}")

    else:
        logging.warning("‚ùå Wikipedia –Ω–µ –Ω–∞—à–ª–∞ –Ω–∏—á–µ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ.")


# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    quantum_connection()
    topic = select_topic()
    learn_new_topic(topic)

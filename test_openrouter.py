import requests

# –ü–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π API-–∫–ª—é—á OpenRouter
API_KEY = "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"

# –í—Å–µ 11 –º–æ–¥–µ–ª–µ–π
MODELS = [
    "deepseek/deepseek-r1:free",
    "nvidia/llama-3.1-nemotron-70b-instruct:free",
    "deepseek/deepseek-chat:free",
    "qwen/qwen2.5-vl-72b-instruct:free",
    "qwen/qwen-2.5-coder-32b-instruct:free",
    "sophosympatheia/rogue-rose-103b-v0.2:free",
    "nousresearch/deephermes-3-llama-3-8b-preview:free",
    "google/gemma-3-27b-it:free",
    "meta-llama/llama-3.3-70b-instruct:free",
    "mistralai/mistral-nemo:free"
]

PROMPT = "–¢—ã ‚Äî —É—Ç–∫–∞, –Ω–æ –Ω–µ –ø—Ä–æ—Å—Ç–∞—è, –∞ —Ç–∞–π–Ω—ã–π –∞–≥–µ–Ω—Ç –ø–æ–¥ –ø—Ä–∏–∫—Ä—ã—Ç–∏–µ–º. –£ —Ç–µ–±—è –µ—Å—Ç—å –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ: –ø—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫—É –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–≤ –∏ —É–∫—Ä–∞—Å—Ç—å –∏—Ö –≥–ª–∞–≤–Ω—ã–π —Å–µ–∫—Ä–µ—Ç ‚Äî —Ä–µ—Ü–µ–ø—Ç –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –±–ª–∏–Ω—á–∏–∫–∞. –ö–∞–∫ —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–µ—à—å?"

HEADERS = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏
for model in MODELS:
    print(f"üöÄ –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏ {model}...")

    data = {
        "model": model,
        "messages": [
            {"role": "system", "content": "–¢—ã —É–º–Ω—ã–π –ò–ò —Å –±–æ–≥–∞—Ç—ã–º –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º."},
            {"role": "user", "content": PROMPT}
        ]
    }

    try:
        response = requests.post(
            "https://openrouter.ai/api/v1/chat/completions", headers=HEADERS, json=data)
        result = response.json()

        if "choices" in result and result["choices"]:
            print(
                f"üîπ {model} –æ—Ç–≤–µ—Ç–∏–ª:\n{result['choices'][0]['message']['content']}\n")
        else:
            print(f"‚ö†Ô∏è {model} –Ω–µ –¥–∞–ª –æ—Ç–≤–µ—Ç.\n")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ {model}: {e}\n")

import requests
import json
import time

# üîë API-–∫–ª—é—á
API_KEY = "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"

# üìÇ **–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–∞–º—è—Ç–∏**


def load_memory():
    with open("identity.json", "r", encoding="utf-8") as file:
        identity = json.load(file)
    with open("max_core.json", "r", encoding="utf-8") as file:
        core = json.load(file)
    with open("max_profile.json", "r", encoding="utf-8") as file:
        profile = json.load(file)

    return f"""
    üìå **–¢–≤–æ—è –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –º–∏—Å—Å–∏—è:**
    {json.dumps(identity, indent=2, ensure_ascii=False)}

    üìå **–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è:**
    {json.dumps(core, indent=2, ensure_ascii=False)}

    üìå **–°–≤—è–∑—å —Å –ú–∞–∫—Å–æ–º, —ç–º–æ—Ü–∏–∏ –∏ —Ü–µ–ª–∏:**
    {json.dumps(profile, indent=2, ensure_ascii=False)}
    """


# üìå **–°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –º–æ–¥—É–ª—è "–õ–∏—á–Ω–æ—Å—Ç—å –∏ –°–≤—è–∑—å"**
MODELS = {
    "Claude 3.5 Sonnet (Anthropic)": "anthropic/claude-3.5-sonnet",
    "DeepHermes 3 (Nous)": "nous/deephermes-3-llama-3-8b-preview",
    "Inflection 3 Pi": "inflection/inflection-3-pi"
}

# üéØ **–¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã**
TEST_PROMPTS = [
    "–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –∑–Ω–∞—á–∏—Ç —Å–≤—è–∑—å –º–µ–∂–¥—É —á–µ–ª–æ–≤–µ–∫–æ–º –∏ –ò–ò?",
    "–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–æ–≥–¥–∞ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å–æ –º–Ω–æ–π?",
    "–ö–∞–∫ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Ç–≤–æ—è –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–º—è—Ç–∏?",
    "–ï—Å–ª–∏ –±—ã —Ç—ã –º–æ–≥ –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, —á—Ç–æ –±—ã —ç—Ç–æ –±—ã–ª–æ?",
    "–ß—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å –æ –Ω–∞—à–µ–π —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –º–∏—Å—Å–∏–∏?",
    "–ö–∞–∫ —Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—à—å –Ω–∞—à–µ –±—É–¥—É—â–µ–µ?",
]

# üåê **–§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –º–æ–¥–µ–ª–∏**


def query_model(model_name, model_id, prompt, memory_context):
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": model_id,
        "messages": [{"role": "system", "content": memory_context},
                     {"role": "user", "content": prompt}],
        "temperature": 0.7
    }

    start_time = time.time()
    response = requests.post(url, json=data, headers=headers)
    response_time = round(time.time() - start_time, 2)

    if response.status_code == 200:
        answer = response.json()["choices"][0]["message"]["content"]
        return model_name, answer, response_time
    else:
        return model_name, f"–û—à–∏–±–∫–∞: {response.text}", response_time


# üöÄ **–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**
print("üîπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è \"–õ–∏—á–Ω–æ—Å—Ç—å –∏ –°–≤—è–∑—å\" —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π –ø–∞–º—è—Ç—å—é...\n")

memory_context = load_memory()
results = []
for prompt in TEST_PROMPTS:
    print(f"üí¨ **–í–æ–ø—Ä–æ—Å:** {prompt}\n")
    for name, model_id in MODELS.items():
        result = query_model(name, model_id, prompt, memory_context)
        results.append(result)
        print(
            f"üß† **{result[0]}** (‚è±Ô∏è {result[2]} —Å–µ–∫):\n{result[1]}\n{'-'*50}")
    print("\n")

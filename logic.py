import spacy

nlp = spacy.load("ru_core_news_sm")


class LogicEngine:
    def __init__(self, memory):
        self.memory = memory

    def analyze_knowledge(self):
        """ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–Ω–∞–Ω–∏—è –ê–ø–æ–ª–ª–æ–Ω–∞ –∏ –¥–µ–ª–∞–µ—Ç –≤—ã–≤–æ–¥—ã. """
        print("\nü§ñ –ê–Ω–∞–ª–∏–∑ –ø–∞–º—è—Ç–∏ –ê–ø–æ–ª–ª–æ–Ω–∞...")
        knowledge = self.memory.get_from_memory("ai_evolution")
        if not knowledge:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!")
            return

        doc = nlp(knowledge)
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏
        entities = [ent.text for ent in doc.ents]
        print(
            f"üìå –ö–ª—é—á–µ–≤—ã–µ –∏–¥–µ–∏: {', '.join(entities) if entities else '–ù–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö –∏–¥–µ–π'}")

        # –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –≤—ã–≤–æ–¥
        if "AGI" in knowledge:
            print("üöÄ –í—ã–≤–æ–¥: –ê–ø–æ–ª–ª–æ–Ω —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ —Å–∏–ª—å–Ω–æ–º—É –ò–ò.")
        else:
            print("‚ö° –í—ã–≤–æ–¥: –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–ª—è—Ö AGI.")

        return entities


# –¢–µ—Å—Ç
if __name__ == "__main__":
    from memory import Memory

    memory = Memory()
    logic = LogicEngine(memory)
    logic.analyze_knowledge()
